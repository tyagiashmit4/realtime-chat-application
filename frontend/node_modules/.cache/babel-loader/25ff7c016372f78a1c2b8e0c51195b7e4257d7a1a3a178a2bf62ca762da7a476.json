{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\realtime-chat-application\\\\frontend\\\\src\\\\components\\\\Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\nimport MessageList from \"./MessageList\";\nimport ChatInput from \"./ChatInput\";\nimport ChatHeader from \"./ChatHeader\";\nimport img1 from \"../assets/back1.jpg\";\nimport { Box, Container } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\nfunction Chat() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [user, setUser] = useState(\"\");\n  useEffect(() => {\n    const savedUser = localStorage.getItem(\"user\");\n    if (savedUser) {\n      setUser(savedUser);\n    }\n  }, []);\n  useEffect(() => {\n    socket.on(\"receiveMessage\", message => {\n      setMessages(prev => [...prev, message]);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  const sendMessage = () => {\n    if (newMessage.trim()) {\n      const userMessage = {\n        user,\n        text: newMessage\n      };\n      socket.emit(\"sendMessage\", userMessage);\n      setMessages(prev => [...prev, userMessage]);\n      setTimeout(() => {\n        const botReply = {\n          user: \"ChatBot\",\n          text: `Hello, ${user}! You said: \"${newMessage}\"`\n        };\n        setMessages(prev => [...prev, botReply]);\n      }, 1000);\n      setNewMessage(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      backgroundImage: `url(${img1})`,\n      backgroundSize: \"cover\",\n      backgroundPosition: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"sm\",\n      sx: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"90vh\",\n        borderRadius: \"10px\",\n        overflow: \"hidden\",\n        boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\",\n        backdropFilter: \"blur(10px)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n        messages: messages,\n        user: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        newMessage: newMessage,\n        setNewMessage: setNewMessage,\n        sendMessage: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Chat, \"AuNyHrmLcg23MH0PEWv3NJ0T3So=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useEffect","useState","io","MessageList","ChatInput","ChatHeader","img1","Box","Container","jsxDEV","_jsxDEV","socket","Chat","_s","messages","setMessages","newMessage","setNewMessage","user","setUser","savedUser","localStorage","getItem","on","message","prev","disconnect","sendMessage","trim","userMessage","text","emit","setTimeout","botReply","sx","display","justifyContent","alignItems","height","backgroundImage","backgroundSize","backgroundPosition","children","maxWidth","flexDirection","borderRadius","overflow","boxShadow","backgroundColor","backdropFilter","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Projects/realtime-chat-application/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\nimport MessageList from \"./MessageList\";\r\nimport ChatInput from \"./ChatInput\";\r\nimport ChatHeader from \"./ChatHeader\";\r\nimport img1 from \"../assets/back1.jpg\";\r\nimport { Box, Container } from \"@mui/material\";\r\n\r\nconst socket = io(\"http://localhost:5000\");\r\n\r\nfunction Chat() {\r\n    const [messages, setMessages] = useState([]);\r\n    const [newMessage, setNewMessage] = useState(\"\");\r\n    const [user, setUser] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        const savedUser = localStorage.getItem(\"user\");\r\n        if (savedUser) {\r\n            setUser(savedUser);\r\n        }\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"receiveMessage\", (message) => {\r\n            setMessages((prev) => [...prev, message]);\r\n        });\r\n\r\n        return () => {\r\n            socket.disconnect();\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = () => {\r\n        if (newMessage.trim()) {\r\n            const userMessage = { user, text: newMessage };\r\n            socket.emit(\"sendMessage\", userMessage);\r\n            setMessages((prev) => [...prev, userMessage]);\r\n\r\n            setTimeout(() => {\r\n                const botReply = {\r\n                    user: \"ChatBot\",\r\n                    text: `Hello, ${user}! You said: \"${newMessage}\"`,\r\n                };\r\n                setMessages((prev) => [...prev, botReply]);\r\n            }, 1000);\r\n\r\n            setNewMessage(\"\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box\r\n            sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                backgroundImage: `url(${img1})`,\r\n                backgroundSize: \"cover\",\r\n                backgroundPosition: \"center\",\r\n            }}\r\n        >\r\n            <Container\r\n                maxWidth=\"sm\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    height: \"90vh\",\r\n                    borderRadius: \"10px\",\r\n                    overflow: \"hidden\",\r\n                    boxShadow: \"0px 4px 10px rgba(0, 0, 0, 0.2)\",\r\n                    backgroundColor: \"rgba(255, 255, 255, 0.8)\", \r\n                    backdropFilter: \"blur(10px)\",\r\n                }}\r\n            >\r\n                <ChatHeader  />\r\n\r\n                <MessageList messages={messages} user={user} />\r\n\r\n                <ChatInput\r\n                    newMessage={newMessage}\r\n                    setNewMessage={setNewMessage}\r\n                    sendMessage={sendMessage}\r\n                />\r\n            </Container>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Chat;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,kBAAkB;AACrC,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,IAAI,MAAM,qBAAqB;AACtC,SAASC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,MAAM,GAAGT,EAAE,CAAC,uBAAuB,CAAC;AAE1C,SAASU,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACZ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ,MAAMoB,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC9C,IAAIF,SAAS,EAAE;MACXD,OAAO,CAACC,SAAS,CAAC;IACtB;EACJ,CAAC,EAAE,EAAE,CAAC;EAENpB,SAAS,CAAC,MAAM;IACZW,MAAM,CAACY,EAAE,CAAC,gBAAgB,EAAGC,OAAO,IAAK;MACrCT,WAAW,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,OAAO,CAAC,CAAC;IAC7C,CAAC,CAAC;IAEF,OAAO,MAAM;MACTb,MAAM,CAACe,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACtB,IAAIX,UAAU,CAACY,IAAI,CAAC,CAAC,EAAE;MACnB,MAAMC,WAAW,GAAG;QAAEX,IAAI;QAAEY,IAAI,EAAEd;MAAW,CAAC;MAC9CL,MAAM,CAACoB,IAAI,CAAC,aAAa,EAAEF,WAAW,CAAC;MACvCd,WAAW,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEI,WAAW,CAAC,CAAC;MAE7CG,UAAU,CAAC,MAAM;QACb,MAAMC,QAAQ,GAAG;UACbf,IAAI,EAAE,SAAS;UACfY,IAAI,EAAE,UAAUZ,IAAI,gBAAgBF,UAAU;QAClD,CAAC;QACDD,WAAW,CAAEU,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEQ,QAAQ,CAAC,CAAC;MAC9C,CAAC,EAAE,IAAI,CAAC;MAERhB,aAAa,CAAC,EAAE,CAAC;IACrB;EACJ,CAAC;EAED,oBACIP,OAAA,CAACH,GAAG;IACA2B,EAAE,EAAE;MACAC,OAAO,EAAE,MAAM;MACfC,cAAc,EAAE,QAAQ;MACxBC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,OAAO;MACfC,eAAe,EAAE,OAAOjC,IAAI,GAAG;MAC/BkC,cAAc,EAAE,OAAO;MACvBC,kBAAkB,EAAE;IACxB,CAAE;IAAAC,QAAA,eAEFhC,OAAA,CAACF,SAAS;MACNmC,QAAQ,EAAC,IAAI;MACbT,EAAE,EAAE;QACAC,OAAO,EAAE,MAAM;QACfS,aAAa,EAAE,QAAQ;QACvBN,MAAM,EAAE,MAAM;QACdO,YAAY,EAAE,MAAM;QACpBC,QAAQ,EAAE,QAAQ;QAClBC,SAAS,EAAE,iCAAiC;QAC5CC,eAAe,EAAE,0BAA0B;QAC3CC,cAAc,EAAE;MACpB,CAAE;MAAAP,QAAA,gBAEFhC,OAAA,CAACL,UAAU;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEf3C,OAAA,CAACP,WAAW;QAACW,QAAQ,EAAEA,QAAS;QAACI,IAAI,EAAEA;MAAK;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAE/C3C,OAAA,CAACN,SAAS;QACNY,UAAU,EAAEA,UAAW;QACvBC,aAAa,EAAEA,aAAc;QAC7BU,WAAW,EAAEA;MAAY;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd;AAACxC,EAAA,CA7EQD,IAAI;AAAA0C,EAAA,GAAJ1C,IAAI;AA+Eb,eAAeA,IAAI;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}